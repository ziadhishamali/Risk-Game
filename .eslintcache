[{"P:\\Personal\\risk-game-react\\src\\index.js":"1","P:\\Personal\\risk-game-react\\src\\reportWebVitals.js":"2","P:\\Personal\\risk-game-react\\src\\App.js":"3","P:\\Personal\\risk-game-react\\src\\components\\Start\\Start.js":"4","P:\\Personal\\risk-game-react\\src\\components\\Game\\Game.js":"5","P:\\Personal\\risk-game-react\\src\\components\\Game\\components\\Board.js":"6","P:\\Personal\\risk-game-react\\src\\components\\Game\\components\\MapData.js":"7","P:\\Personal\\risk-game-react\\src\\components\\Game\\components\\Node.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":980,"mtime":1607966848331,"results":"12","hashOfConfig":"10"},{"size":2608,"mtime":1607879840499,"results":"13","hashOfConfig":"10"},{"size":2917,"mtime":1607979478202,"results":"14","hashOfConfig":"10"},{"size":1561,"mtime":1607980637303,"results":"15","hashOfConfig":"10"},{"size":2064,"mtime":1607973162046,"results":"16","hashOfConfig":"10"},{"size":330,"mtime":1607977889261,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3rqtzo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"P:\\Personal\\risk-game-react\\src\\index.js",[],["37","38"],"P:\\Personal\\risk-game-react\\src\\reportWebVitals.js",[],"P:\\Personal\\risk-game-react\\src\\App.js",["39"],"import { useState } from 'react';\nimport './App.css'\nimport Game from './components/Game/Game';\nimport Start from './components/Start/Start';\n\nfunction App() {\n\tconst [isStart, setIsStart] = useState(true)\n\tconst [isEnd, setIsEnd] = useState(false)\n\tconst [isEgypt, setIsEgypt] = useState(true)\n\tconst [mode, setMode] = useState(\"\")\n\tconst [player1Agent, setPlayer1Agent] = useState(\"human\")\n\tconst [player2Agent, setPlayer2Agent] = useState(\"AStar\")\n\n\tconst submitStart = ({ isEgypt, mode, player1Agent, player2Agent }) => {\n\t\tsetIsEgypt(isEgypt)\n\t\tsetMode(mode)\n\t\tsetPlayer1Agent(player1Agent)\n\t\tsetPlayer2Agent(player2Agent)\n\t\tsetIsStart(false)\n\t}\n\n\tconsole.log({isEgypt, mode, player1Agent, player2Agent})\n\n\tlet component = <Start submitStart={submitStart} />\n\tif (!isStart && !isEnd) {\n\t\tcomponent = <Game isEgypt={isEgypt} player1Agent={player1Agent} player2Agent={player2Agent} />\n\t}\n\n  \treturn (\n\t\t<div className=\"App\">\n\t\t\t{component}\n\t\t</div>\n  \t)\n}\n\nexport default App;\n","P:\\Personal\\risk-game-react\\src\\components\\Start\\Start.js",[],"P:\\Personal\\risk-game-react\\src\\components\\Game\\Game.js",["40","41","42","43","44"],"import React, { useEffect, useState } from 'react'\r\nimport Board from './components/Board'\r\n\r\nimport './Game.css'\r\nimport MapData from './components/MapData'\r\nimport Node from './components/Node'\r\n\r\nconst mapData = new MapData()\r\n\r\n/**\r\n* Game class have all the logic of the game itself\r\n* and will send the required data to the board to be displayed\r\n*/\r\nconst Game = ({ isEgypt, player1Agent, player2Agent }) => {\r\n    const [turn, setTurn] = useState(0)\r\n    const [numTurns, setNumTurns] = useState(0)\r\n    \r\n    // to be populated with the cities and their respective posX and posY\r\n    const [cities, setCities] = useState([])\r\n\r\n    const onClickListner = (e, idx) => {\r\n        console.log(\"path: \" + idx)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let elements = window.document.getElementsByTagName(\"path\")\r\n        console.log(\"hello: \", elements)\r\n\r\n        // array of nodes using Node.js\r\n        const limit = isEgypt ? 20 : 40\r\n        let cities = []\r\n        let counts = [limit, limit]\r\n        let total = [0, 0]\r\n        // TODO: fill the cities\r\n\r\n        for (let i = 0; i < elements.length; i++) {\r\n            let element = elements[i]\r\n            element.addEventListener('click', (e) => {\r\n                onClickListner(e, i)\r\n            })\r\n\r\n            // specify which player to own current city\r\n            let owner = 0\r\n            if (total[0] === limit) {\r\n                owner = 1\r\n            } else if (total[1] === limit) {\r\n                owner = 0\r\n            } else {\r\n                owner = Math.floor(Math.random() * 2)\r\n            }\r\n            total[owner]++\r\n\r\n            let node = new Node(owner, 1)\r\n            counts[owner]--\r\n\r\n            // styling the map svg according to the owner\r\n            if (owner) {\r\n                element.style.fill = '#1c92d2' // blue\r\n            } else {\r\n                element.style.fill = '#c60203' // red\r\n            }\r\n\r\n            // add the node to cities\r\n            cities.push(node)\r\n        }\r\n\r\n        // TODO: fill the armies for each city\r\n        for (let i = 0; i < cities.length && (counts[0] > 0 || counts[1] > 0); i = (i + 1) % cities.length) {\r\n            let city = cities[i]\r\n            if (counts[city.owner] === 0) {\r\n                continue;\r\n            }\r\n            let count = Math.floor(Math.random() * (counts[city.owner] - 1) + 1);\r\n            counts[city.owner] -= count\r\n            console.log(counts[0], counts[1], count)\r\n            cities[i].armies += count\r\n        }\r\n\r\n        let sum = [0, 0]\r\n        for (let i = 0; i < cities.length; i++) {\r\n            sum[cities[i].owner] += cities[i].armies\r\n        }\r\n\r\n        console.log(\"cities: \", cities, sum)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"game-wrapper\">\r\n            <Board isEgypt={isEgypt} turn={turn} numTurns={numTurns} cities={cities} />\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Game\r\n","P:\\Personal\\risk-game-react\\src\\components\\Game\\components\\Board.js",[],"P:\\Personal\\risk-game-react\\src\\components\\Game\\components\\MapData.js",[],"P:\\Personal\\risk-game-react\\src\\components\\Game\\components\\Node.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":8,"column":16,"nodeType":"51","messageId":"52","endLine":8,"endColumn":24},{"ruleId":"49","severity":1,"message":"53","line":8,"column":7,"nodeType":"51","messageId":"52","endLine":8,"endColumn":14},{"ruleId":"49","severity":1,"message":"54","line":15,"column":18,"nodeType":"51","messageId":"52","endLine":15,"endColumn":25},{"ruleId":"49","severity":1,"message":"55","line":16,"column":22,"nodeType":"51","messageId":"52","endLine":16,"endColumn":33},{"ruleId":"49","severity":1,"message":"56","line":19,"column":20,"nodeType":"51","messageId":"52","endLine":19,"endColumn":29},{"ruleId":"57","severity":1,"message":"58","line":85,"column":8,"nodeType":"59","endLine":85,"endColumn":10,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'setIsEnd' is assigned a value but never used.","Identifier","unusedVar","'mapData' is assigned a value but never used.","'setTurn' is assigned a value but never used.","'setNumTurns' is assigned a value but never used.","'setCities' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isEgypt'. Either include it or remove the dependency array.","ArrayExpression",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [isEgypt]",{"range":"66","text":"67"},[2717,2719],"[isEgypt]"]